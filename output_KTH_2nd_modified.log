Namespace(device=device(type='cuda', index=0), run_id=65, comment=None, demo=False, load=None, transfer_load=None, checkpoint_freq=1000, data_root='/home/jovyan/video-storage/amit_files/Master_Thesis_Project/KTH_Dataset_2/paired_images', config='/home/jovyan/video-storage/amit_files/Master_Thesis_Project/keypoints_KTH.yml', epochs=24, processes=7, seed=None, cma_algo=None, cma_step_mode='auto', cma_step_decay=0.001, cma_initial_step_size=None, cma_samples=None, cma_oversample=0, display=False, display_freq=5000, display_kp_rows=4, opt_level='O2', model_type='F', model_in_channels=3, model_keypoints=10, transporter_combine_mode='max', policy_action_select_mode='argmax', policy_depth=1, gym_reward_count_limit=None, optimizer='Adam', batch_size=16, lr=None, dataset=None, dataset_train_len=34000, dataset_test_len=274, dataset_randomize=False, data_aug_tps_cntl_pts=4, data_aug_tps_variance=0.05, data_aug_max_rotate=0.1, data_aug_type=None, dataset_1='first_images', dataset_2='second_images', model_z_channels=64, **{'cma_algo;': 'fast'})
device: cuda:0 run_id: 65 comment: None demo: False load: None transfer_load: None checkpoint_freq: 1000 data_root: /home/jovyan/video-storage/amit_files/Master_Thesis_Project/KTH_Dataset_2/paired_images config: /home/jovyan/video-storage/amit_files/Master_Thesis_Project/keypoints_KTH.yml epochs: 24 processes: 7 seed: None cma_algo: None cma_step_mode: auto cma_step_decay: 0.001 cma_initial_step_size: None cma_samples: None cma_oversample: 0 display: False display_freq: 5000 display_kp_rows: 4 opt_level: O2 model_type: F model_in_channels: 3 model_keypoints: 10 transporter_combine_mode: max policy_action_select_mode: argmax policy_depth: 1 gym_reward_count_limit: None optimizer: Adam batch_size: 16 lr: None dataset: None dataset_train_len: 34000 dataset_test_len: 274 dataset_randomize: False data_aug_tps_cntl_pts: 4 data_aug_tps_variance: 0.05 data_aug_max_rotate: 0.1 data_aug_type: None dataset_1: first_images dataset_2: second_images model_z_channels: 64 cma_algo;: fast 
KeyNet(
  (encoder): Unit(
    (in_block): Sequential(
      (0): ReplicationPad2d((1, 1, 1, 1))
      (1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1))
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): LeakyReLU(negative_slope=0.01, inplace=True)
    )
    (core): Sequential(
      (0): ReplicationPad2d((1, 1, 1, 1))
      (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1))
      (2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): LeakyReLU(negative_slope=0.01, inplace=True)
      (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (5): ReplicationPad2d((1, 1, 1, 1))
      (6): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): LeakyReLU(negative_slope=0.01, inplace=True)
      (9): ReplicationPad2d((1, 1, 1, 1))
      (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
      (11): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): LeakyReLU(negative_slope=0.01, inplace=True)
      (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (14): ReplicationPad2d((1, 1, 1, 1))
      (15): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))
      (16): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): LeakyReLU(negative_slope=0.01, inplace=True)
      (18): ReplicationPad2d((1, 1, 1, 1))
      (19): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))
      (20): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (21): LeakyReLU(negative_slope=0.01, inplace=True)
      (22): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (23): ReplicationPad2d((1, 1, 1, 1))
      (24): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))
      (25): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (26): LeakyReLU(negative_slope=0.01, inplace=True)
      (27): ReplicationPad2d((1, 1, 1, 1))
      (28): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))
      (29): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (30): LeakyReLU(negative_slope=0.01, inplace=True)
    )
    (out_block): Sequential(
      (0): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): LeakyReLU(negative_slope=0.01, inplace=True)
    )
  )
  (keypoint): Unit(
    (in_block): Sequential(
      (0): ReplicationPad2d((1, 1, 1, 1))
      (1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1))
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): LeakyReLU(negative_slope=0.01, inplace=True)
    )
    (core): Sequential(
      (0): ReplicationPad2d((1, 1, 1, 1))
      (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1))
      (2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): LeakyReLU(negative_slope=0.01, inplace=True)
      (4): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (5): ReplicationPad2d((1, 1, 1, 1))
      (6): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): LeakyReLU(negative_slope=0.01, inplace=True)
      (9): ReplicationPad2d((1, 1, 1, 1))
      (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
      (11): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): LeakyReLU(negative_slope=0.01, inplace=True)
      (13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (14): ReplicationPad2d((1, 1, 1, 1))
      (15): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))
      (16): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): LeakyReLU(negative_slope=0.01, inplace=True)
      (18): ReplicationPad2d((1, 1, 1, 1))
      (19): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))
      (20): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (21): LeakyReLU(negative_slope=0.01, inplace=True)
      (22): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (23): ReplicationPad2d((1, 1, 1, 1))
      (24): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))
      (25): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (26): LeakyReLU(negative_slope=0.01, inplace=True)
      (27): ReplicationPad2d((1, 1, 1, 1))
      (28): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))
      (29): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (30): LeakyReLU(negative_slope=0.01, inplace=True)
    )
    (out_block): Sequential(
      (0): Conv2d(512, 10, kernel_size=(1, 1), stride=(1, 1))
      (1): LeakyReLU(negative_slope=0.01, inplace=True)
    )
  )
  (ssm): SpatialLogSoftmax()
  (key2map): GaussianLike()
  (decoder): Unit(
    (in_block): Sequential(
      (0): ReplicationPad2d((1, 1, 1, 1))
      (1): Conv2d(74, 512, kernel_size=(3, 3), stride=(1, 1))
      (2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): LeakyReLU(negative_slope=0.01, inplace=True)
    )
    (core): Sequential(
      (0): ReplicationPad2d((1, 1, 1, 1))
      (1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))
      (2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): UpsamplingBilinear2d(scale_factor=2.0, mode='bilinear')
      (5): ReplicationPad2d((1, 1, 1, 1))
      (6): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1))
      (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace=True)
      (9): ReplicationPad2d((1, 1, 1, 1))
      (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
      (11): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (12): ReLU(inplace=True)
      (13): UpsamplingBilinear2d(scale_factor=2.0, mode='bilinear')
      (14): ReplicationPad2d((1, 1, 1, 1))
      (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
      (16): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (17): ReLU(inplace=True)
      (18): ReplicationPad2d((1, 1, 1, 1))
      (19): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
      (20): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (21): ReLU(inplace=True)
      (22): UpsamplingBilinear2d(scale_factor=2.0, mode='bilinear')
      (23): ReplicationPad2d((1, 1, 1, 1))
      (24): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1))
      (25): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (26): ReLU(inplace=True)
      (27): ReplicationPad2d((1, 1, 1, 1))
      (28): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1))
      (29): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (30): ReLU(inplace=True)
    )
    (out_block): Sequential(
      (0): Conv2d(64, 3, kernel_size=(1, 1), stride=(1, 1))
      (1): LeakyReLU(negative_slope=0.01, inplace=True)
    )
  )
)
[32mEPOCH 0 LR: 0.0001 [36mave loss: 0.015370187954977155 [94mbest loss: 0.015370187954977155 [0m
[32mEPOCH 1 LR: 0.0001 [36mave loss: 0.015557297179475427 [94mbest loss: 0.015370187954977155 [0m
[32mEPOCH 2 LR: 0.0001 [36mave loss: 0.013205191818997264 [94mbest loss: 0.013205191818997264 [0m
[32mEPOCH 3 LR: 0.0001 [36mave loss: 0.013362410059198738 [94mbest loss: 0.013205191818997264 [0m
[32mEPOCH 4 LR: 0.0001 [36mave loss: 0.012599665019661189 [94mbest loss: 0.012599665019661189 [0m
[32mEPOCH 5 LR: 0.0001 [36mave loss: 0.011994589981622995 [94mbest loss: 0.011994589981622995 [0m
[32mEPOCH 6 LR: 0.0001 [36mave loss: 0.011623706994578242 [94mbest loss: 0.011623706994578242 [0m
[32mEPOCH 7 LR: 0.0001 [36mave loss: 0.010730063077062368 [94mbest loss: 0.010730063077062368 [0m
[32mEPOCH 8 LR: 0.0001 [36mave loss: 0.010299687529914081 [94mbest loss: 0.010299687529914081 [0m
[32mEPOCH 9 LR: 0.0001 [36mave loss: 0.00960117345675826 [94mbest loss: 0.00960117345675826 [0m
[32mEPOCH 10 LR: 0.0001 [36mave loss: 0.009511950029991566 [94mbest loss: 0.009511950029991566 [0m
[32mEPOCH 11 LR: 0.0001 [36mave loss: 0.009293685294687748 [94mbest loss: 0.009293685294687748 [0m
[32mEPOCH 12 LR: 0.0001 [36mave loss: 0.008415173785761 [94mbest loss: 0.008415173785761 [0m
[32mEPOCH 13 LR: 0.0001 [36mave loss: 0.008534877188503742 [94mbest loss: 0.008415173785761 [0m
[32mEPOCH 14 LR: 0.0001 [36mave loss: 0.010153621947392822 [94mbest loss: 0.008415173785761 [0m
[32mEPOCH 15 LR: 0.0001 [36mave loss: 0.007741250563412905 [94mbest loss: 0.007741250563412905 [0m
[32mEPOCH 16 LR: 0.0001 [36mave loss: 0.007878002268262208 [94mbest loss: 0.007741250563412905 [0m
[32mEPOCH 17 LR: 0.0001 [36mave loss: 0.007503904832992703 [94mbest loss: 0.007503904832992703 [0m
[32mEPOCH 18 LR: 0.0001 [36mave loss: 0.007197218760848045 [94mbest loss: 0.007197218760848045 [0m
[32mEPOCH 19 LR: 0.0001 [36mave loss: 0.007147839548997581 [94mbest loss: 0.007147839548997581 [0m
[32mEPOCH 20 LR: 0.0001 [36mave loss: 0.00702708235476166 [94mbest loss: 0.00702708235476166 [0m
[32mEPOCH 21 LR: 0.0001 [36mave loss: 0.007102121692150831 [94mbest loss: 0.00702708235476166 [0m
[32mEPOCH 22 LR: 0.0001 [36mave loss: 0.006931572873145342 [94mbest loss: 0.006931572873145342 [0m
[32mEPOCH 23 LR: 0.0001 [36mave loss: 0.006576614337973297 [94mbest loss: 0.006576614337973297 [0m
